default_platform(:android)

platform :android do

   #Simple Lane Format
      desc "Provide description for your lane"
      lane :laneName do
            #your operation
            end

   # Lane to Deploy Production-Release Bundle file in Internal track
      desc "Deploy Production-Release APK file in Internal track to PlayStore" # Lane description
      lane :prodApkBeta do
         gradle(
                  task: "assemble", # assemble for release apk, assemble
                  flavor: "prod", # Flavor Name
                  build_type: "Release",
                  properties: {
                      "android.injected.signing.store.file" => "Your Keystore Path",
                      "android.injected.signing.store.password" => "Your Keystore Password",
                      "android.injected.signing.key.alias" => "Your Key Alias",
                      "android.injected.signing.key.password" => "Your Key Password",
                  }
        )
        supply(
            skip_upload_images: 'true',
            skip_upload_screenshots: 'true',
            track: 'internal', # track name in which you want to deploy your build
            package_name: 'Package name of your app',
            apk_paths: ["Your generated apk file path"]
        )
        end

  # Lane to Deploy Production-Release Bundle file in Beta track
    desc "Deploy Production-Release Bundle file in Internal track to PlayStore"
    lane :prodBundleBeta do
       gradle(
                task: "bundle",
                flavor: "prod", # Flavor Name
                build_type: "Release",
                properties: {
                    "android.injected.signing.store.file" => "Your Keystore Path",
                    "android.injected.signing.store.password" => "Your Keystore Password",
                    "android.injected.signing.key.alias" => "Your Key Alias",
                    "android.injected.signing.key.password" => "Your Key Password",
                }
      )
      supply(
          skip_upload_images: 'true',
          skip_upload_screenshots: 'true',
          track: 'internal',
          package_name: 'Package name of your app',
          aab_paths: ["Your generated aab file path"]
      )
      end

     # Lane to Upload Apk to Firebase
         desc "Upload release apk on firebase app distribution"
         lane :uploadApkToFirebase do
            gradle(
                    task: "assemble",
                    build_type: "Release",
                    properties: {
                        "android.injected.signing.store.file" => "Your Keystore Path",
                        "android.injected.signing.store.password" => "Your Keystore Password",
                        "android.injected.signing.key.alias" => "Your Key Alias",
                        "android.injected.signing.key.password" => "Your Key Password",
                    }
            )
            firebase_app_distribution(
                    app: "Your Firebase App Id",
                    firebase_cli_token: "Your Firebase CLI token",
                    release_notes_file: "release-notes.txt",
                    android_artifact_type: "APK",
                    android_artifact_path: "app/build/outputs/apk/release/app-release.apk",
                    groups: "Your Testers Group Name"
            )
         end

     # Lane to Upload Bundle to Firebase
              desc "Upload release bundle on firebase app distribution"
              lane :uploadBundleToFirebase do
                 gradle(
                         task: "Bundle",
                         build_type: "Release",
                         properties: {
                             "android.injected.signing.store.file" => "Your Keystore Path",
                             "android.injected.signing.store.password" => "Your Keystore Password",
                             "android.injected.signing.key.alias" => "Your Key Alias",
                             "android.injected.signing.key.password" => "Your Key Password",
                         }
                 )
                 firebase_app_distribution(
                         app: "Your Firebase App Id",
                         firebase_cli_token: "Your Firebase CLI token",
                         release_notes_file: "release-notes.txt",
                         android_artifact_type: "AAB",
                         android_artifact_path: "app/build/outputs/bundle/release/app-release.apk",
                         groups: "Your Testers Group Name"
                 )
              end
end
